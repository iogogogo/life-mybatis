group "com.zz.mybatis"
version "1.0-SNAPSHOT"

buildscript {
    ext {
        mybatisVersion = "3.4.6"
        mysqlVersion = "5.1.47"
        javaVersion = JavaVersion.VERSION_1_8
    }
}

// 所有子项目应用
subprojects {

    apply plugin: "java"

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://maven.aliyun.com/nexus/content/repositories/jcenter/" }
        mavenCentral()
    }

    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"

    processResources {
        exclude { "**/*.*" }
    }

    // 设置资源文件路径
    sourceSets.main.resources.srcDirs = ["src/main/java", "src/main/resources"]

    // 创建 src 目录
    task "create-dirs" << {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs() }
    }

    // JavaDoc utf8
    tasks.withType(Javadoc) {
        options.addStringOption("Xdoclint:none", "-quiet")
        options.addStringOption("encoding", "UTF-8")
        options.addStringOption("charSet", "UTF-8")
    }

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
    }

    //需要排除的jar
    configurations {
    }

    //这里一定得要。在多模块下，不然编译失败，因为不会把依赖模块给打包。
    jar.enabled = true

    dependencies {

        compileOnly("org.projectlombok:lombok:1.16.20")

        implementation "ch.qos.logback:logback-classic:1.2.3"
        
        runtime "mysql:mysql-connector-java:${mysqlVersion}"
        implementation "org.mybatis:mybatis:${mybatisVersion}"

        implementation "org.apache.commons:commons-lang3:3.7"

        implementation "com.google.code.gson:gson-parent:2.8.2"
        implementation "com.alibaba:fastjson:1.2.47"

        testCompile "junit:junit:4.12"
    }
}
